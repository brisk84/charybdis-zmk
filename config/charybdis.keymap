#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define CANARY 0
#define NAV 2

#define NUFU 1
#define SYM 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

&sl {
  release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        Canary {
            label = "Canary";
            bindings = <
              &kp       W  &kp       L  &kp        Y  &kp        P  &kp B        &kp Z  &kp        F  &kp        O  &kp       U  &kp       SQT  
              &kp       R  &kp       R  &kp        S  &kp        T  &kp G        &kp M  &kp        N  &kp        E  &kp       I  &kp       A     
              &lt   POI Q  &kp       J  &kp        V  &kp        D  &kp K        &kp X  &kp        H  &kp SLASH     &kp    COMMA &lt POI DOT 
                                        &lt MED ESC  &kp SPACE  &sl NUFU         &sl NumFu    &kp RSHIFT
            >;
        };

        NuFu {
            label = "Numeral/Function";
            bindings = <
                &trans  &kp F7  &kp F8  &kp F9 &kp F12        &trans  &kp N7  &kp N8  &kp N9  &kp DELETE
                &trans  &kp F4  &kp F5  &kp F6 &kp F11        &trans  &kp N4  &kp N5  &kp N6  &kp BACKSPACE
                &trans  &kp F1  &kp F2  &kp F3 &kp F10        &trans  &kp N1  &kp N2  &kp N3  &trans
                                &trans  &trans  &trans        &trans &kp N0 
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
                &kp ESC     &to QWERTY &to CANARY &to_rus     &to_eng      &kp HOME   &kp PG_DN         &kp UP             &kp BKSP   &kp DEL
                &sk LGUI    &sk LALT   &sk LCTRL  &sk LSHFT   &kp TAB      &kp LEFT   &kp LEFT          &kp DOWN           &kp RIGHT  &kp ENTER
                &kp LC(B)   &kp N1     &kp N2     &key_repeat &kp BSLH     &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans     &trans
                                       &trans     &kp SPACE   &trans       &trans     &kp RSHFT
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
              &kp TILDE &kp AMPS  &kp STAR   &trans    &kp PLUS        &trans &kp LBRC  &kp RBRC  &trans  &kp PIPE
              &kp MINUS &kp DLLR  &kp PRCNT  &kp CARET &kp EQUAL       &trans &kp LPAR  &kp RPAR  &kp DQT &kp APOS
              &kp UNDER &kp EXCL  &kp AT     &kp HASH  &kp GRAVE       &trans &kp LBKT  &kp RBKT  &trans  &kp BSLH
                                  &trans     &trans    &trans          &trans &trans
            >;
        };

        Media {
            label = "Media";
            bindings = <
              &trans     &trans        &bt BT_CLR_ALL &trans       &trans            &trans      &trans        &bt BT_CLR_ALL  &trans        &trans
              &kp C_PREV &kp C_VOL_DN  &kp C_MUTE     &kp C_VOL_UP &kp C_NEXT        &kp C_PREV  &kp C_VOL_DN  &kp C_MUTE      &kp C_VOL_UP  &kp C_NEXT
              &trans     &trans        &trans         &trans       &trans            &trans      &trans        &trans          &trans        &trans
                                       &trans    &kp C_PLAY_PAUSE  &kp C_STOP        &kp C_STOP  &kp C_PLAY_PAUSE
            >;
        };

        Pointer {
            label = "Pointer";
            bindings = <
              &trans       &trans       &trans        &trans        &trans               &trans &trans        &trans        &trans       &trans
              &kp LGUI     &kp LALT     &kp LCTRL     &kp LSHFT     &trans               &trans &kp RSHFT     &kp RCTRL     &kp RALT     &kp RGUI
              &trans       &mo SCR      &mo SNI       &trans        &trans               &trans &trans        &tog SNI      &tog SCR     &trans
                                            &mkp RCLK  &mkp LCLK  &mkp MCLK         &mkp MCLK  &mkp LCLK
            >;
        };

        Scroll {
            label = "Scroll";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans
            >;
        };

        Sniper {
            label = "Sniper";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
